
MAKE SURE TO CHECK IF DETECTED BEFORE USING!

INI Functions
void write_string(string file, string string, string app, string key)
string read_string(string file, string app, string key)
void write_int(string file, int value, string app, string key)
int read_int(string file, string app, string key)
void write_float(string file, float value, string app, string key)
int read_float(string file, string app, string key)
void write_bool(string file, bool value, string app, string key)
bool read_bool(string file, string app, string key)

UTIL Functions
Vector2 v2(float x, float y)
Vector3 v3(float x, float y, float z)
void add_feature(string name, function option)
void add_player_feature(string name, function option)
Player get_selected_player()
void test()
string get_version()
bool is_key_pressed(int key)
void notify(string msg)
Hash joaat(string str)
float deg_to_rad(float deg)
Vehicle spawn_vehicle(Hash hash)
void include(string file)
int time()
int time_ms()
vector<string> get_all_files_in_directory(string dir, string extension)
void to_clipboard(string text)
bool dir_exists(string dir)
bool file_exists(string file)
bool make_dir(string dir)
int rgb_to_uint(int r, int g, int b)
int uint_to_r(int color)
int uint_to_g(int color)
int uint_to_b(int color)

SHV Functions
void set_script_thread(Hash script)
void yield(int ms)
int register_ytd(string filename, string registerAs)
void set_global_i(int global, int value)
int get_global_i(int global)
void set_global_f(int global, float value)
float get_global_f(int global)
float get_local_f(Hash script, int local)
void set_local_f(Hash script, int local, float value)
int get_local_i(Hash script, int local)
void set_local_i(Hash script, int local, int value)

PLAYER Functions
Ped get_player_ped(Player player)
Player player_id()
void set_player_wanted_level(Player player, int wantedLevel, bool disableNoMission)
void set_player_wanted_level_now(Player player, bool p1)
void set_player_model(Hash hash)
Group get_player_group(Player player)
bool is_player_female(Player player)
bool is_player_friend(Player player)
bool is_player_playing(Player player)
bool is_player_free_aiming(Player player)
Entity get_entity_player_is_aiming_at(Player player)
Vehicle get_personal_vehicle()
void set_player_visible_locally(Player player, bool toggle)
void set_local_player_visible_locally(bool toggle)
void set_player_as_modder(Player player, int flags)
string get_player_name(Player player)
int get_player_scid(Player player)
bool is_player_pressing_horn(Player player)
bool is_player_modder(Player player, int mask)
bool is_player_god(Player player)
int get_player_wanted_level(Player player)
int player_count()
bool is_player_in_any_vehicle(Player player)
Vector3 get_player_coords(Player player)
float get_player_heading(Player player)
float get_player_health(Player player)
float get_player_max_health(Player player)
float get_player_armour(Player player)
int get_player_from_ped(Ped ped)
int get_player_team(Player player)
Vehicle get_player_vehicle(Player player)
bool is_player_vehicle_god(Player player)
bool is_player_host(Player player)
Player get_host()
Hash get_player_model(Player player)
bool send_player_sms(Player player, string msg)
bool unset_player_as_modder(Player player, int flags)
int get_player_modder_flags(Player player)
string get_modder_flag_text(int flag)
int get_modder_flag_ends()
int add_modder_flag(string text)
bool is_player_valid(Player player)
int get_player_host_token(Player player)
int get_player_host_priority(Player player)

PED Functions
bool is_ped_in_any_vehicle(Ped ped)
bool set_group_formation(Ped group, int formation)
bool set_ped_as_group_member(Ped ped, int groupId)
Group get_ped_group(Ped ped)
int get_group_size(int group)
float get_ped_health(Ped ped)
bool set_ped_health(Ped ped, float value)
bool is_ped_ragdoll(Ped ped)
bool is_ped_a_player(Ped ped)
Hash get_current_ped_weapon(Ped ped)
bool set_ped_into_vehicle(Ped ped, Vehicle vehicle, int seat)
int get_ped_drawable_variation(Ped ped, int group)
int get_ped_texture_variation(Ped ped, int group)
int get_ped_prop_index(Ped ped, int group)
int get_ped_prop_texture_index(Ped ped, int group)
bool set_ped_component_variation(Ped ped, int component, int drawable, int texture, int pallette)
bool set_ped_prop_index(Ped ped, int component, int drawable, int texture, int unk)
void set_ped_can_switch_weapons(Ped ped, bool toggle)
bool is_ped_shooting(Ped ped)
int get_ped_bone_index(Ped ped, int bone)
Vector3 get_ped_bone_coords(Ped ped, Hash boneId, Vector3 offset)
Hash get_ped_relationship_group_hash(Ped ped)
void set_ped_relationship_group_hash(Ped ped, Hash hash)
Vehicle get_vehicle_ped_is_using(Ped ped)
void clear_all_ped_props(Ped ped)
int clear_ped_tasks_immediately(Ped ped)
void clear_ped_blood_damage(Ped ped)
bool is_ped_in_vehicle(Ped ped, Vehicle vehicle)
bool is_ped_using_any_scenario(Ped ped)
bool set_ped_to_ragdoll(Ped ped, int time1, int time2, int type)
bool set_ped_can_ragdoll(Ped ped, bool toggle)
bool can_ped_ragdoll(Ped ped)
Vector3 get_ped_last_weapon_impact(Ped ped)
bool set_ped_combat_ability(Ped ped, int ability)
float get_ped_max_health(Entity entity)
bool set_ped_max_health(Entity entity, float health)
bool resurrect_ped(Ped ped)
void set_ped_combat_movement(Ped ped, int type)
void set_ped_combat_range(Ped ped, int type)
void set_ped_combat_attributes(Ped ped, int attr, bool toggle)
void set_ped_accuracy(Ped ped, int accuracy)
Ped create_ped(int type, Hash model, Vector3 pos, float heading, bool isNetworked, bool unk1)
int get_number_of_ped_drawable_variations(Ped ped, int comp)
int get_number_of_ped_texture_variations(Ped ped, int comp, int draw)
int get_number_of_ped_prop_drawable_variations(Ped ped, int groupId)
int get_number_of_ped_prop_texture_variations(Ped ped, int groupId, int drawId)
void set_ped_random_component_variation(Ped ped)
void set_ped_default_component_variation(Ped ped)
void set_ped_movement_clipset(Ped ped, string szClipset)
void reset_ped_movement_clipset(Ped ped, bool unk0)
Ped clone_ped(Ped ped)
bool set_ped_config_flag(Ped ped, int flag, uint8_t value)
bool set_ped_ragdoll_blocking_flags(Ped ped, int flags)
bool reset_ped_ragdoll_blocking_flags(Ped ped, int flags)
void set_ped_density_multiplier_this_frame(float mult)
void set_scenario_ped_density_multiplier_this_frame(float m1, float m2)
vector<Ped> get_all_peds()
Group create_group()
void remove_group(Group group)
void set_ped_as_group_leader(Ped ped, Group group)
void remove_ped_from_group(Ped ped)
bool is_ped_group_member(Ped ped, Group group)
bool set_group_formation_spacing(Group group, float a2, float a3, float a4)
bool reset_group_formation_default_spacing(Group group)
void set_ped_never_leaves_group(Ped ped, bool toggle)
bool does_group_exist(Group group)
bool is_ped_in_group(Ped ped)
void set_create_random_cops(bool t)
bool can_create_random_cops()
bool is_ped_swimming(Ped ped)
bool is_ped_swimming_underwater(Ped ped)
void clear_relationship_between_groups(Hash group1, Hash group2)
void set_relationship_between_groups(int relation, Hash group1, Hash group2)

VEHICLE Functions
void set_vehicle_tire_smoke_color(Vehicle vehicle, int r, int g, int b)
Ped get_ped_in_vehicle_seat(Vehicle vehicle, int seat)
int get_free_seat(Vehicle vehicle)
bool is_vehicle_full(Vehicle vehicle)
void set_vehicle_stolen(Vehicle vehicle, bool toggle)
bool set_vehicle_color(Vehicle v, int p, int s, int pearl, int wheel)
string get_mod_text_label(Vehicle veh, int modType, int modValue)
string get_mod_slot_name(Vehicle veh, int modType)
int get_num_vehicle_mods(Vehicle veh, int modType)
bool set_vehicle_mod(Vehicle vehicle, int modType, int modIndex, bool customTires)
int get_vehicle_mod(Vehicle vehicle, int modType)
bool set_vehicle_mod_kit_type(Vehicle vehicle, int type)
void set_vehicle_extra(Vehicle veh, int extra, bool toggle)
bool does_extra_exist(Vehicle veh, int extra)
bool is_vehicle_extra_turned_on(Vehicle veh, int extra)
void toggle_vehicle_mod(Vehicle veh, int mod, bool toggle)
void set_vehicle_bulletproof_tires(Vehicle veh, bool toggle)
bool is_vehicle_a_convertible(Vehicle veh)
bool get_convertible_roof_state(Vehicle veh)
void set_convertible_roof(Vehicle veh, bool toggle)
void set_vehicle_indicator_lights(Vehicle veh, int index, bool toggle)
void set_vehicle_brake_lights(Vehicle veh, bool toggle)
void set_vehicle_can_be_visibly_damaged(Vehicle veh, bool toggle)
void set_vehicle_engine_on(Vehicle veh, bool toggle, bool instant, bool noAutoTurnOn)
void set_vehicle_fixed(Vehicle veh)
void set_vehicle_deformation_fixed(Vehicle veh)
void set_vehicle_undriveable(Vehicle veh, bool toggle)
bool set_vehicle_on_ground_properly(Vehicle veh)
void set_vehicle_forward_speed(Vehicle veh, float speed)
void set_vehicle_number_plate_text(Vehicle veh, string text)
void set_vehicle_door_open(Vehicle veh, int doorIndex, bool loose, bool openInstantly)
void set_vehicle_doors_shut(Vehicle veh, bool closeInstantly)
bool is_toggle_mod_on(Vehicle veh, int index)
void set_vehicle_wheel_type(Vehicle veh, int type)
void set_vehicle_number_plate_index(Vehicle veh, int index)
void set_vehicle_tires_can_burst(Vehicle veh, bool toggle)
void set_vehicle_tire_burst(Vehicle veh, int index, bool onRim, float unk0)
int get_num_vehicle_mod(Vehicle veh, int modType)
bool is_vehicle_engine_running(Vehicle veh)
void set_vehicle_engine_health(Vehicle veh, float health)
bool is_vehicle_damaged(Vehicle veh)
bool is_vehicle_on_all_wheels(Vehicle veh)
Vehicle create_vehicle(Hash model, Vector3 pos, float heading, bool networked, bool unk2)
bool set_vehicle_doors_locked(Vehicle vehicle, int lockStatus)
bool set_vehicle_neon_lights_color(Vehicle vehicle, int color)
int get_vehicle_neon_lights_color(Vehicle vehicle)
bool set_vehicle_neon_light_enabled(Vehicle vehicle, int index, bool toggle)
bool is_vehicle_neon_light_enabled(Vehicle vehicle, int index, bool toggle)
void set_vehicle_density_multipliers_this_frame(float mult)
void set_random_vehicle_density_multiplier_this_frame(float mult)
void set_parked_vehicle_density_multiplier_this_frame(float mult)
void set_ambient_vehicle_range_multiplier_this_frame(float mult)
bool is_vehicle_rocket_boost_active(Vehicle veh)
void set_vehicle_rocket_boost_active(Vehicle veh, bool toggle)
void set_vehicle_rocket_boost_percentage(Vehicle veh, float percentage)
void set_vehicle_rocket_boost_refill_time(Vehicle veh, float refillTime)
void control_landing_gear(Vehicle veh, int state)
int get_landing_gear_state(Vehicle veh)
int get_vehicle_livery(Vehicle veh)
bool set_vehicle_livery(Vehicle veh, int index)
bool is_vehicle_stopped(Vehicle veh)
int get_vehicle_number_of_passengers(Vehicle veh)
int get_vehicle_max_number_of_passengers(Vehicle veh)
int get_vehicle_model_number_of_seats(Hash modelHash)
int get_vehicle_livery_count(Vehicle veh)
int get_vehicle_roof_livery_count(Vehicle veh)
bool is_vehicle_model(Vehicle veh, Hash model)
bool is_vehicle_stuck_on_roof(Vehicle veh)
void set_vehicle_doors_locked_for_player(Vehicle veh, Player player, bool toggle)
bool get_vehicle_doors_locked_for_player(Vehicle veh, Player player)
void set_vehicle_doors_locked_for_all_players(Vehicle veh, bool toggle)
void set_vehicle_doors_locked_for_non_script_players(Vehicle veh, bool toggle)
void set_vehicle_doors_locked_for_team(Vehicle veh, int team, bool toggle)
void explode_vehicle(Vehicle veh, bool isAudible, bool isInvisible)
void set_vehicle_out_of_control(Vehicle veh, bool killDriver, bool explodeOnImpact)
void set_vehicle_timed_explosion(Vehicle veh, Ped ped, bool toggle)
void add_vehicle_phone_explosive_device(Vehicle veh)
bool has_vehicle_phone_explosive_device()
void detonate_vehicle_phone_explosive_device()
void set_taxi_lights(Vehicle veh, bool state)
bool is_taxi_light_on(Vehicle veh)
bool set_vehicle_colors(Vehicle veh, int primary, int secondary)
bool set_vehicle_extra_colors(Vehicle veh, int pearl, int wheel)
int get_vehicle_primary_color(Vehicle veh)
int get_vehicle_secondary_color(Vehicle veh)
int get_vehicle_pearlecent_color(Vehicle veh)
int get_vehicle_wheel_color(Vehicle veh)
bool set_vehicle_fullbeam(Vehicle veh, bool toggle)
void set_vehicle_custom_primary_colour(Vehicle veh, uint color)
uint get_vehicle_custom_primary_colour(Vehicle veh)
void clear_vehicle_custom_primary_colour(Vehicle veh)
bool is_vehicle_primary_colour_custom(Vehicle veh)
void set_vehicle_custom_secondary_colour(Vehicle veh, uint color)
uint get_vehicle_custom_secondary_colour(Vehicle veh)
void clear_vehicle_custom_secondary_colour(Vehicle veh)
bool is_vehicle_secondary_colour_custom(Vehicle veh)
string get_livery_name(Vehicle veh, int livery)
void set_vehicle_window_tint(Vehicle veh, int t)
int get_vehicle_window_tint(Vehicle veh)
vector<Hash> get_all_vehicle_model_hashes()
vector<Vehicle> get_all_vehicles()
void modify_vehicle_top_speed(Vehicle veh, float f)
int get_vehicle_headlight_color(Vehicle v)
bool set_vehicle_headlight_color(Vehicle v, int color)
void set_heli_blades_full_speed(Vehicle v)
void set_heli_blades_speed(Vehicle v, float speed)
void set_vehicle_parachute_active(Vehicle v, bool toggle)
bool does_vehicle_have_parachute(Vehicle v)
bool can_vehicle_parachute_be_activated(Vehicle v)
void set_vehicle_can_be_locked_on(Vehicle veh, bool toggle, bool skipSomeCheck)

ENTITY Functions
bool does_entity_exist(Entity entity)
Vector3 get_entity_coords(Entity entity, bool alive)
bool set_entity_coords_no_offset(Entity entity, pos)
Vector3 get_entity_rotation(Entity entity)
bool set_entity_rotation(Entity entity, Vector3 rot)
bool set_entity_heading(Entity entity, float heading)
bool set_entity_velocity(Entity entity, Vector3 velocity)
Vector3 get_entity_velocity(Entity entity)
bool is_an_entity(Entity entity)
bool is_entity_a_ped(Entity entity)
bool is_entity_a_vehicle(Entity entity)
bool is_entity_an_object(Entity entity)
bool is_entity_dead(Entity entity)
bool is_entity_on_fire(Entity entity)
bool is_entity_visible(Entity entity)
bool is_entity_attached(Entity entity)
bool set_entity_visible(Entity entity, bool toggle)
int get_entity_type(Entity entity)
bool set_entity_gravity(Entity entity, bool gravity)
void apply_force_to_entity(Ped ped, int forceType, float x, float y, float z, float rx, float ry, float rz, bool isRel, bool highForce)
Entity get_entity_attached_to(Entity entity)
bool detach_entity(Entity e)
Hash get_entity_model_hash(Entity e)
float get_entity_heading(Entity entity)
bool attach_entity_to_entity(Entity subject, Entity target, int boneIndex, Vector3 offset, Vector3 rot, bool softPinning, bool collision, bool isPed, int vertexIndex, bool fixedRot)
void set_entity_as_mission_entity(Entity entity, bool toggle, bool unk)
bool set_entity_collision(Entity entity, bool toggle, bool physics, bool unk0)
bool is_entity_in_air(Entity entity)
bool set_entity_as_no_longer_needed(Entity entity)
bool set_entity_no_collsion_entity(Entity entity, Entity target, bool unk)
void freeze_entity(Entity entity, bool toggle)
Vector3 get_entity_offset_from_coords(Entity lEntity, Vector3 coords)
Vector3 get_entity_offset_from_entity(Entity lEntity, Entity lEntity2)
void set_entity_alpha(Entity entity, int alpha, bool skin)
void reset_entity_alpha(Entity entity)
bool delete_entity(Entity e)
void set_entity_god_mode(Entity entity, bool toggle)
bool get_entity_god_mode(Entity entity)
bool is_entity_in_water(Entity entity)
float get_entity_speed(Entity entity)
void set_entity_lights(Entity entity, bool toggle)
void set_entity_max_speed(Entity entity, float speed)
float get_entity_pitch(Entity entity)
float get_entity_roll(Entity e)
Vector3 get_entity_physics_rotation(Entity e)
float get_entity_physics_heading(Entity e)
float get_entity_physics_pitch(Entity e)
float get_entity_physics_roll(Entity e)
bool does_entity_have_physics(Entity entity)
Vector3 get_entity_rotation_velocity(Entity entity)
float get_entity_submerged_level(Entity entity)
int get_entity_population_type(Entity entity)
bool is_entity_static(Entity entity)
bool is_entity_in_zone(Entity entity, string zone)
bool is_entity_upright(Entity entity, float angle)
bool is_entity_upside_down(Entity entity)
bool has_entity_been_damaged_by_any_object(Entity entity)
bool has_entity_been_damaged_by_any_vehicle(Entity entity)
bool has_entity_been_damaged_by_any_ped(Entity entity)
bool has_entity_been_damaged_by_entity(Entity e1, Entity e2)
bool does_entity_have_drawable(Entity entity)
bool has_entity_collided_with_anything(Entity entity)
int get_entity_bone_index_by_name(Entity entity, string name)

OBJECT Functions
Object create_ambient_pickup(Hash pickupHash, Vector3 pos, int p4, int value, Hash modelHash, BOOL p7, BOOL p8)
Object create_object(Hash model, Vector3 pos, bool networked, bool dynamic)
vector<Object> get_all_objects()
vector<Pickup> get_all_pickups()

WEAPON Functions
void give_delayed_weapon_to_ped(Ped ped, Hash hash, int time, bool equipNow)
int get_weapon_tint_count(Hash weapon)
int get_ped_weapon_tint_index(Ped ped, Hash weapon)
void set_ped_weapon_tint_index(Ped ped, Hash weapon, int index)
void give_weapon_component_to_ped(Ped ped, Hash weapon, Hash component)
void remove_all_ped_weapons(Ped ped)
void remove_weapon_from_ped(Ped ped, Hash weapon)
int get_max_ammo(Ped ped, Hash weapon)
bool set_ped_ammo(Ped ped, Hash weapon, int ammo)
void remove_weapon_component_from_ped(Ped ped, Hash weapon, Hash component)
bool has_ped_got_weapon_component(Ped ped, Hash weapon, Hash component)
Hash get_ped_ammo_type_from_weapon(Ped ped, Hash weapon)
void set_ped_ammo_by_type(Ped ped, Hash type, uint amount)
bool has_ped_got_weapon(Ped ped, Hash weapon)
vector<Hash> get_all_weapon_hashes()

STREAMING Functions
bool request_model(Hash hash)
bool has_model_loaded(Hash hash)
bool set_model_as_no_longer_needed(Hash hash)
bool is_model_in_cdimage(Hash hash)
bool is_model_valid(Hash hash)
bool is_model_a_plane(Hash hash)
bool is_model_a_vehicle(Hash hash)
bool is_model_a_heli(Hash hash)
void request_ipl(string szName)
void remove_ipl(string szName)
void request_anim_set(string szName)
bool has_anim_set_loaded(string szName)
void request_anim_dict(string szName)
bool has_anim_dict_loaded(string szName)
bool is_model_a_bike(Hash ulHash)
bool is_model_a_car(Hash ulHash)
bool is_model_a_bicycle(Hash ulHash)
bool is_model_a_quad(Hash ulHash)
bool is_model_a_boat(Hash ulHash)
bool is_model_a_train(Hash ulHash)
bool is_model_an_object(Hash ulHash)
bool is_model_a_ped(Hash ulHash)

CAM Functions
Vector3 get_gameplay_cam_rot()
Vector3 get_gameplay_cam_pos()
float get_gameplay_cam_relative_pitch()
float get_gameplay_cam_relative_yaw()
void display_sniper_scope_this_frame()
void render_script_cams(bool render, bool ease, int easeTime, bool p3, bool p4)
Cam create_cam(const char* camName, bool p1)
Cam create_cam_with_params(const char* camName, float posX, float posY, float posZ, float rotX, float rotY, float rotZ, float fov, bool p8, int p9)
Cam create_camera(Hash camHash, bool p1)
Cam create_camera_with_params(Hash camHash, float posX, float posY, float posZ, float rotX, float rotY, float rotZ, float fov, bool p8, Any p9)
void destroy_cam(Cam cam, bool destroy)
void destroy_all_cams(bool destroy)
bool does_cam_exist(Cam cam)
void set_cam_active(Cam cam, bool active)
bool is_cam_active(Cam cam)
bool is_cam_rendering(Cam cam)
Cam get_rendering_cam()
Vector3 get_cam_coord(Cam cam)
Vector3 get_cam_rot(Cam cam, Any a2)
float get_cam_fov(Cam cam)
Vector3 get_gameplay_cam_coord()
void set_gameplay_cam_relative_pitch(float x, float a2)
void set_gameplay_cam_relative_yaw(float yaw)
float get_gameplay_cam_fov()

GAMEPLAY Functions
Hash get_hash_key(string in)
void display_onscreen_keyboard(string title, string default_text, int maxLength)
bool update_onscreen_keyboard()
string get_onscreen_keyboard_result()
bool is_onscreen_keyboard_active()
void set_override_weather(int weatherIndex)
void clear_override_weather()
void set_blackout(bool toggle)
void set_mobile_radio(bool toggle)
int get_game_state()
bool is_game_state(int)
void clear_area_of_objects(Vector3 coord, float radius, int flags)
void clear_area_of_vehicles(Vector3 coord, float radius, bool a3, bool a4, bool a5, bool a6, bool a7)
void clear_area_of_peds(Vector3 coord, float radius, bool a3)
void clear_area_of_cops(Vector3 coord, float radius, bool a3)
void set_cloud_hat_opacity(float opacity)
float get_cloud_hat_opacity()
void preload_cloud_hat(string szName)
void clear_cloud_hat()
void load_cloud_hat(string szName, float transitionTime)
void unload_cloud_hat(string szName, float a2)
float get_ground_z(Vector3 pos)
int get_frame_count()
float get_frame_time()
bool shoot_single_bullet_between_coords(Vector3 start, Vector3 end, int damage, Hash weapon, Ped owner, bool audible, bool invisible, float speed)

FIRE Functions
bool add_explosion(Vector3 pos, int type, bool isAudible, bool isInvis, float fCamShake, Ped owner)
Ped start_entity_fire(Ped ped)
void stop_entity_fire(Ped ped)
bool is_explosion_in_area(int explosionType, float x1, float y1, float z1, float x2, float y2, float z2)

NETWORK Functions
bool network_is_host()
bool has_control_of_entity(Entity entity)
bool request_control_of_entity(Entity entity)
bool is_session_started()
void network_session_kick_player(Player player)
bool is_friend_online(string name)
bool is_friend_in_multiplayer(string name)
uint get_friend_scid(string name)
uint get_friend_count()
uint get_max_friends()
Hash network_hash_from_player(Player player)
string get_friend_index_name(uint index)
bool is_friend_index_online(uint index)
bool is_scid_friend(uint scid)
int veh_to_net(Vehicle v)
int ped_to_net(Ped p)
int obj_to_net(Object o)
Vehicle net_to_veh(int netId)
Ped net_to_ped(int netId)
Object net_to_obj(int netId)
bool trigger_script_crc_check_on_player(Player player, int p1, Hash scriptHash)
bool is_rockstar_banned()
bool is_socialclub_banned()
bool can_play_online()

DLC Functions
bool is_dlc_present(Hash dlc)
bool get_is_loading_screen_active()
bool is_ui_loading_multiplayer()
int get_current_language_id()
int get_user_language_id()
void start_recording(int mode)
void stop_recording_and_save_clip()
void stop_recording_and_discard_clip()
bool is_recording()
void activate_rockstar_editor()

DECORATOR Functions
bool decor_set_bool(Entity entity, string propertyName, bool value)
bool decor_set_float(Entity entity, string propertyName, float value)
bool decor_set_int(Entity entity, string propertyName, int value)
bool decor_get_bool(Entity entity, string propertyName)
float decor_get_float(Entity entity, string propertyName)
int decor_get_int(Entity entity, string propertyName)
bool decor_exists_on(Entity entity, string propertyName)
bool decor_remove(Entity entity, string propertyName)
void decor_register(string propertyName, int type)

SCRIPT Functions
void terminate_thread(int threadId)
bool is_thread_active(int threadId)
int get_id_of_this_thread()
string get_this_script_name()
Hash get_hash_of_this_script_name()
void trigger_script_event(int eventId, Player player, vector<int> params)
void set_thread_priority(int priority)

NETSHOP Functions
bool network_shop_checkout_start(Any a1)
bool network_shop_end_service(Any a1)
Any network_shop_delete_set_telemetry_nonce_seed()
bool network_transfer_bank_to_wallet(int charStatInt, int amount)
bool network_transfer_wallet_to_bank(int charStatInt, int amount)
Any network_shop_cash_transfer_set_telemetry_nonce_seed()
bool network_shop_set_telemetry_nonce_seed(Any a1)
string get_online_version()

SYSTEM Functions
void wait(int ms)
int start_new_script(const char* scriptName, int stackSize)
int start_new_script_with_name_hash(Hash scriptHash, int stackSize)

CUTSCENE Functions
void stop_cutscene_immediately()
void remove_cutscene()
bool is_cutscene_active()
bool is_cutscene_playing()

CONTROL Functions
bool disable_control_action(int inputGroup, int control, bool disable)
bool is_control_just_pressed(int inputGroup, int control)
bool is_disabled_control_just_pressed(int inputGroup, int control)
bool is_control_pressed(int inputGroup, int control)
bool is_disabled_control_pressed(int inputGroup, int control)

GRAPHICS Functions
int get_screen_height()
int get_screen_width()
void request_named_ptfx_asset(string asset)
bool has_named_ptfx_asset_loaded(string asset)
void set_next_ptfx_asset(string asset)
Ptfx start_ptfx_looped_on_entity(string name, Entity e, Vector3 offset, Vector3 rot, float scale)
bool start_ptfx_non_looped_on_entity(string name, Entity e, Vector3 offset, Vector3 rot, float scale)
void remove_ptfx_from_entity(Entity)
bool does_looped_ptfx_exist(Ptfx ptfx)
Ptfx start_particle_fx_looped_at_coord(string name, Vector3 pos, Vector3 rot, float scale, bool xAxis, bool yAxis, bool zAxis, bool a8)
bool start_particle_fx_non_looped_at_coord(string name, Vector3 pos, Vector3 rot, float scale, bool xAxis, bool yAxis, bool zAxis)
bool start_networked_particle_fx_non_looped_at_coord(string name, Vector3 pos, Vector3 rot, float scale, bool xAxis, bool yAxis, bool zAxis)
void remove_particle_fx(Ptfx ptfx, bool a2)
void remove_particle_fx_in_range(Vector3 pos, float range)
void set_particle_fx_looped_offsets(Ptfx ptfx, Vector3 pos, Vector3 rot)
void set_particle_fx_looped_evolution(Ptfx ptfx, string propertyName, float amount, bool a4)
void set_particle_fx_looped_color(Ptfx ptfx, float r, float b, float g, bool a5)
void set_particle_fx_looped_alpha(Ptfx ptfx, float a)
void set_particle_fx_looped_scale(Ptfx ptfx, float scale)
void set_particle_fx_looped_far_clip_dist(Ptfx ptfx, float dist)
void enable_clown_blood_vfx(bool toggle)
void enable_alien_blood_vfx(bool toggle)
void animpostfx_play(Hash effect, int duration, bool looped)
void animpostfx_stop(Hash effect)
bool animpostfx_is_running(Hash effect)
void animpostfx_stop_all()
Any request_scaleform_movie(string szName)
bool begin_scaleform_movie_method(Any scaleform, string szMethod)
void scaleform_movie_method_add_param_texture_name_string(string val)
void scaleform_movie_method_add_param_int(int val)
void scaleform_movie_method_add_param_float(float val)
void scaleform_movie_method_add_param_bool(bool val)
void draw_scaleform_movie_fullscreen(Any scaleform, int r, int g, int b, int a, int a6)
void draw_scaleform_movie(Any scaleform, float x, float y, float w, float h, int r, int g, int b, int a, int a10)
void end_scaleform_movie_method()
void draw_marker(Any type, Vector3 pos, Vector3 dir, Vector3 rot, Vector3 scale, int red, int green, int blue, int alpha, bool bobUpAndDown, bool faceCam, int a12, bool rotate, string textureDict, string textureName, bool drawOntEnts)
Any create_checkpoint(Any type, Vector3 thisPos, Vector3 nextPos, float radius, int red, int green, int blue, int alpha, int reserved)
void set_checkpoint_icon_height(Any checkpoint, float height)
void set_checkpoint_cylinder_height(Any checkpoint, float nearHeight, float farHeight, float radius)
void set_checkpoint_rgba(Any checkpoint, int r, int g, int b, int a)
void set_checkpoint_icon_rgba(Any checkpoint, int r, int g, int b, int a)
void delete_checkpoint(Any checkpoint)
bool has_scaleform_movie_loaded(Any scaleform)
void set_scaleform_movie_as_no_longer_needed(Any scaleform)

TIME Functions
void set_clock_time(int hour, int minute, int second)
int get_clock_hours()
int get_clock_minutes()
int get_clock_seconds()

AI Functions
void task_goto_entity(Entity e, Entity target, int duration, float distance, float speed)
bool task_combat_ped(Ped ped, Ped target, int a3, int a4)
Any task_go_to_coord_by_any_means(Ped ped, Vector3 coords, float speed, Any p4, bool p5, int walkStyle, float a7)
bool task_wander_standard(Ped ped, float unk0, bool unk1)
void task_vehicle_drive_wander(Ped ped, Vehicle vehicle, float speed, int driveStyle)
void task_start_scenario_in_place(Ped ped, string name, int unkDelay, bool playEnterAnim)
void task_start_scenario_at_position(Ped ped, string name, Vector3 coord, float heading, int duration, bool sittingScenario, bool teleport)
void task_stand_guard(Ped ped, Vector3 coord, float heading, string name)
void play_anim_on_running_scenario(Ped ped, string dict, string name)
bool does_scenario_group_exist(string name)
bool is_scenario_group_enabled(string name)
bool set_scenario_group_enabled(string name, bool b)
void reset_scenario_groups_enabled()
bool set_exclusive_scenario_group(string name)
bool reset_exclusive_scenario_group()
bool is_scenario_type_enabled(string name)
bool set_scenario_type_enabled(string name, bool b)
void reset_scenario_types_enabled()
bool is_ped_active_in_scenario(Ped ped)
void task_follow_to_offset_of_entity(Ped ped, Entity entity, Vector3 offset, float speed, int timeout, float stopRange, bool persistFollowing)
void task_vehicle_drive_to_coord_longrange(Ped ped, Vehicle vehicle, Vector3 pos, float speed, int mode, float stopRange)
void task_shoot_at_entity(Entity entity, Entity target, int duration, Hash firingPattern)
void task_vehicle_escort(Ped ped, Vehicle vehicle, Vehicle targetVehicle, int mode, float speed, int drivingStyle, float minDistance, int a8, float noRoadsDistance)
void task_vehicle_follow(Ped driver, Vehicle vehicle, Entity targetEntity, float speed, int drivingStyle, int minDistance)
void task_vehicle_drive_to_coord(Ped ped, Vehicle vehicle, Vector3 coord, float speed, int a5, Hash vehicleModel, int driveMode, float stopRange, float a9)
void task_vehicle_shoot_at_coord(Ped ped, Vector3 coord, float a3)
void task_vehicle_shoot_at_ped(Ped ped, Ped target, float a3)
void task_vehicle_aim_at_coord(Ped ped, Vector3 coord)
void task_vehicle_aim_at_ped(Ped ped, Ped target)
void task_stay_in_cover(Ped ped)
void task_go_to_coord_while_aiming_at_coord(Ped ped, Vector3 gotoCoord, Vector3 aimCoord, float moveSpeed, bool a5, float a6, float a7, bool a8, Any flags, bool a10, Hash firingPattern)
void task_go_to_coord_while_aiming_at_entity(Ped ped, Vector3 gotoCoord, Entity target, float moveSpeed, bool a5, float a6, float a7, bool a8, Any flags, bool a10, Hash firingPattern)
void task_go_to_entity_while_aming_at_coord(Ped ped, Entity gotoEntity, Vector3 aimCoord, float a4, bool shoot, float a6, float a7, bool a8, bool a9, Hash firingPattern)
void task_go_to_entity_while_aiming_at_entity(Ped ped, Entity gotoEntity, Entity target, float a4, bool shoot, float a6, float a7, bool a8, bool a9, Hash firingPattern)
void task_open_vehicle_door(Ped ped, Vehicle vehicle, int timeOut, int doorIndex, float speed)
void task_enter_vehicle(Ped ped, Vehicle vehicle, int timeout, int seat, float speed, uint flag, Any p6)
void task_leave_vehicle(Ped ped, Vehicle vehicle, uint flag)
void task_sky_dive(Ped ped, bool a2)
void task_parachute(Ped ped, bool a2, bool a3)
void task_parachute_to_target(Ped ped, Vector3 coord)
void set_parachute_task_target(Ped ped, Vector3 coord)
void set_parachute_task_thrust(Ped ped, float thrust)
void task_rappel_from_heli(Ped ped, float a2)
void task_vehicle_chase(Ped driver, Entity target)
void set_task_vehicle_chase_behaviour_flag(Ped ped, int flag, bool set)
void set_task_vehicle_chase_ideal_persuit_distance(Ped ped, float dist)
void task_shoot_gun_at_coord(Ped ped, Vector3 coord, int duration, Hash firingPattern)
void task_aim_gun_at_coord(Ped ped, Vector3 coord, int time, bool a4, bool a5)
void task_turn_ped_to_face_entity(Ped ped, Entity entity, int duration)
void task_aim_gun_at_entity(Ped ped, Entity entity, int duration, bool a4)
bool is_task_active(Ped ped, Any taskId)

INTERIOR Functions
Any get_interior_from_entity(Entity entity)
Any get_interior_at_coords_with_type(const Vector3 coords, string interiorType)
void enable_interior_prop(Any id, string prop)
void disable_interior_prop(Any id, string prop)
void refresh_interior(Any id)

WATER Functions
float get_waves_intensity()
void set_waves_intensity(float intensity)
void reset_waves_intensity()

AUDIO Functions
void play_sound(int soundId, string audioName, string audioRef, bool p4, Any p5, bool p6)
void play_sound_frontend(int soundId, string audioName, string audioRef, bool p4)
void play_sound_from_entity(int soundId, string audioName, Entity entity, string audioRef)
void play_sound_from_coord(int soundId, string audioName, Vector3 pos, string audioRef, bool a5, int range, bool a7)
void stop_sound(int soundId)

STATS Functions
bool stat_set_int(Hash statName, int value, bool save)
bool stat_set_float(Hash statName, float value, bool save)
bool stat_set_bool(Hash statName, bool value, bool save)
int stat_get_int(Hash hash, int unk0)
float stat_get_float(Hash hash, int unk0)
bool stat_get_bool(Hash hash, int unk0)
void stat_increment(Hash statName, float value)

UI Functions
void begin_text_command_display_text(string text)
void end_text_command_display_text(float x, float y)
void add_text_component_substring_player_name(string text)
void set_text_scale(float p0, float size)
void notify_above_map(string message, string title, int color)
int add_blip_for_entity(Entity entity)
Entity get_entity_from_blip(int blip)
int get_blip_from_entity(Entity entity)
bool set_blip_sprite(Blip blip, int spriteId)
bool set_blip_colour(Blip blip, int color)
void hide_hud_component_this_frame(int id)
void hide_hud_and_radar_this_frame(int id)
string get_label_text(string label)
void draw_rect(float x, float y, float width, float height, int r, int g, int b, int a)
void draw_line(Vector3 pos1, Vector3 pos2, int r, int g, int b, int a)
void draw_text(string text, Vector2 pos)
void set_text_color(int red, int green, int blue, int alpha)
void set_text_font(int fontType)
void set_text_wrap(float start, float end)
void set_text_outline()
void set_text_centre(bool align)
Vector2 get_waypoint_coord()
void set_new_waypoint(Vector2 coord)
bool is_hud_component_active(int id)
void show_hud_component_this_frame(int id)
void set_waypoint_off()
bool set_blip_as_mission_creator_blip(int blip, BOOL toggle)
bool is_mission_creator_blip(int blip)
int add_blip_for_pickup(Pickup pickup)
Vector3 get_blip_coord(int blip)
void set_blip_route(int blip, bool enabled)
void set_blip_route_color(int blip, int colour)
int add_blip_for_radius(Vector3 pos, float radius)
int add_blip_for_coord(Vector3 pos)
void set_blip_coord(int blip, Vector3 coord)
bool remove_blip(int blip)
